buildscript {
    def versionFile = file(".dev-version")
    def fixedVersion = null
    if(versionFile.exists()) {
        fixedVersion = versionFile.text.replace("\n","")
    } else {
        throw new GradleScriptException("VERSIONFILE COULD NOT BE FOUND!", new Throwable("Please check the CI!"))
    }

    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }

    repositories {
        maven {
            url = System.getenv().getOrDefault("artifactory_contextUrl", project.getProperties().get("artifactory_contextUrl").toString()) + "general/"
        }
        mavenCentral()
        jcenter()
        mavenLocal()
    }
}

plugins {
    id 'java-gradle-plugin'
}

group 'net.labyfy'

repositories {
    mavenCentral()
}

def versionFile = file(".dev-version")
def fixedVersion = null
if(versionFile.exists()) {
    fixedVersion = versionFile.text.replace("\n","")
} else {
    throw new GradleScriptException("VERSIONFILE COULD NOT BE FOUND!", new Throwable("Please check the CI!"))
}
version = fixedVersion

dependencies {
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.11.1'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.12'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
    implementation group: 'io.github.java-diff-utils', name: 'java-diff-utils', version: '4.7'
}

gradlePlugin {
    plugins {
        simplePlugin {
            id = "labyfy-gradle"
            implementationClass = "net.labyfy.gradle.LabyfyGradlePlugin"
        }
    }
}
apply plugin: 'maven'
apply plugin: "com.jfrog.artifactory"
apply plugin: 'maven-publish'


artifactory {
    contextUrl = System.getenv().getOrDefault('artifactory_contextUrl', "${artifactory_contextUrl}")
    //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'labymedia'
            username = System.getenv().getOrDefault("artifactory_user", "${artifactory_user}")
            password = System.getenv().getOrDefault("artifactory_password", "${artifactory_password}")
            maven = true

        }
        defaults {
            publications('mavenJava')
        }
    }
    resolve {
        repository {
            repoKey = 'general'
            username = System.getenv().getOrDefault("artifactory_user", "${artifactory_user}")
            password = System.getenv().getOrDefault("artifactory_password", "${artifactory_password}")
            maven = true

        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
}
